#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Portfolio")]
public partial class UserDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertrestaurant(restaurant instance);
  partial void Updaterestaurant(restaurant instance);
  partial void Deleterestaurant(restaurant instance);
  partial void InsertordAndLine(ordAndLine instance);
  partial void UpdateordAndLine(ordAndLine instance);
  partial void DeleteordAndLine(ordAndLine instance);
  partial void Insertorder(order instance);
  partial void Updateorder(order instance);
  partial void Deleteorder(order instance);
  partial void InsertContact(Contact instance);
  partial void UpdateContact(Contact instance);
  partial void DeleteContact(Contact instance);
  partial void InsertorderLine(orderLine instance);
  partial void UpdateorderLine(orderLine instance);
  partial void DeleteorderLine(orderLine instance);
  partial void Insertproduct(product instance);
  partial void Updateproduct(product instance);
  partial void Deleteproduct(product instance);
  partial void Insert_User(_User instance);
  partial void Update_User(_User instance);
  partial void Delete_User(_User instance);
  #endregion
	
	public UserDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PortfolioConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public UserDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<restaurant> restaurants
	{
		get
		{
			return this.GetTable<restaurant>();
		}
	}
	
	public System.Data.Linq.Table<ordAndLine> ordAndLines
	{
		get
		{
			return this.GetTable<ordAndLine>();
		}
	}
	
	public System.Data.Linq.Table<order> orders
	{
		get
		{
			return this.GetTable<order>();
		}
	}
	
	public System.Data.Linq.Table<Contact> Contacts
	{
		get
		{
			return this.GetTable<Contact>();
		}
	}
	
	public System.Data.Linq.Table<orderLine> orderLines
	{
		get
		{
			return this.GetTable<orderLine>();
		}
	}
	
	public System.Data.Linq.Table<product> products
	{
		get
		{
			return this.GetTable<product>();
		}
	}
	
	public System.Data.Linq.Table<_User> _Users
	{
		get
		{
			return this.GetTable<_User>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.restaurant")]
public partial class restaurant : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _address;
	
	private string _openHours;
	
	private string _name;
	
	private EntitySet<product> _products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnopenHoursChanging(string value);
    partial void OnopenHoursChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
	
	public restaurant()
	{
		this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX)")]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openHours", DbType="VarChar(MAX)")]
	public string openHours
	{
		get
		{
			return this._openHours;
		}
		set
		{
			if ((this._openHours != value))
			{
				this.OnopenHoursChanging(value);
				this.SendPropertyChanging();
				this._openHours = value;
				this.SendPropertyChanged("openHours");
				this.OnopenHoursChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="restaurant_product", Storage="_products", ThisKey="id", OtherKey="resId")]
	public EntitySet<product> products
	{
		get
		{
			return this._products;
		}
		set
		{
			this._products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_products(product entity)
	{
		this.SendPropertyChanging();
		entity.restaurant = this;
	}
	
	private void detach_products(product entity)
	{
		this.SendPropertyChanging();
		entity.restaurant = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ordAndLine")]
public partial class ordAndLine : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _orderId;
	
	private System.Nullable<int> _orderLineId;
	
	private EntityRef<order> _order;
	
	private EntityRef<orderLine> _orderLine;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnorderIdChanging(System.Nullable<int> value);
    partial void OnorderIdChanged();
    partial void OnorderLineIdChanging(System.Nullable<int> value);
    partial void OnorderLineIdChanged();
    #endregion
	
	public ordAndLine()
	{
		this._order = default(EntityRef<order>);
		this._orderLine = default(EntityRef<orderLine>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="Int")]
	public System.Nullable<int> orderId
	{
		get
		{
			return this._orderId;
		}
		set
		{
			if ((this._orderId != value))
			{
				if (this._order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnorderIdChanging(value);
				this.SendPropertyChanging();
				this._orderId = value;
				this.SendPropertyChanged("orderId");
				this.OnorderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderLineId", DbType="Int")]
	public System.Nullable<int> orderLineId
	{
		get
		{
			return this._orderLineId;
		}
		set
		{
			if ((this._orderLineId != value))
			{
				if (this._orderLine.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnorderLineIdChanging(value);
				this.SendPropertyChanging();
				this._orderLineId = value;
				this.SendPropertyChanged("orderLineId");
				this.OnorderLineIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_ordAndLine", Storage="_order", ThisKey="orderId", OtherKey="id", IsForeignKey=true)]
	public order order
	{
		get
		{
			return this._order.Entity;
		}
		set
		{
			order previousValue = this._order.Entity;
			if (((previousValue != value) 
						|| (this._order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._order.Entity = null;
					previousValue.ordAndLines.Remove(this);
				}
				this._order.Entity = value;
				if ((value != null))
				{
					value.ordAndLines.Add(this);
					this._orderId = value.id;
				}
				else
				{
					this._orderId = default(Nullable<int>);
				}
				this.SendPropertyChanged("order");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="orderLine_ordAndLine", Storage="_orderLine", ThisKey="orderLineId", OtherKey="id", IsForeignKey=true)]
	public orderLine orderLine
	{
		get
		{
			return this._orderLine.Entity;
		}
		set
		{
			orderLine previousValue = this._orderLine.Entity;
			if (((previousValue != value) 
						|| (this._orderLine.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._orderLine.Entity = null;
					previousValue.ordAndLines.Remove(this);
				}
				this._orderLine.Entity = value;
				if ((value != null))
				{
					value.ordAndLines.Add(this);
					this._orderLineId = value.id;
				}
				else
				{
					this._orderLineId = default(Nullable<int>);
				}
				this.SendPropertyChanged("orderLine");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<System.DateTime> _orderDate;
	
	private System.Nullable<decimal> _total;
	
	private System.Nullable<int> _userId;
	
	private string @__address;
	
	private System.Nullable<decimal> _totalCals;
	
	private System.Nullable<bool> _ordStatus;
	
	private EntitySet<ordAndLine> _ordAndLines;
	
	private EntityRef<_User> @__User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnorderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnorderDateChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    partial void On_addressChanging(string value);
    partial void On_addressChanged();
    partial void OntotalCalsChanging(System.Nullable<decimal> value);
    partial void OntotalCalsChanged();
    partial void OnordStatusChanging(System.Nullable<bool> value);
    partial void OnordStatusChanged();
    #endregion
	
	public order()
	{
		this._ordAndLines = new EntitySet<ordAndLine>(new Action<ordAndLine>(this.attach_ordAndLines), new Action<ordAndLine>(this.detach_ordAndLines));
		this.@__User = default(EntityRef<_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> orderDate
	{
		get
		{
			return this._orderDate;
		}
		set
		{
			if ((this._orderDate != value))
			{
				this.OnorderDateChanging(value);
				this.SendPropertyChanging();
				this._orderDate = value;
				this.SendPropertyChanged("orderDate");
				this.OnorderDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> total
	{
		get
		{
			return this._total;
		}
		set
		{
			if ((this._total != value))
			{
				this.OntotalChanging(value);
				this.SendPropertyChanging();
				this._total = value;
				this.SendPropertyChanged("total");
				this.OntotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
	public System.Nullable<int> userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				if (this.@__User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_address]", Storage="__address", DbType="VarChar(MAX)")]
	public string _address
	{
		get
		{
			return this.@__address;
		}
		set
		{
			if ((this.@__address != value))
			{
				this.On_addressChanging(value);
				this.SendPropertyChanging();
				this.@__address = value;
				this.SendPropertyChanged("_address");
				this.On_addressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalCals", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> totalCals
	{
		get
		{
			return this._totalCals;
		}
		set
		{
			if ((this._totalCals != value))
			{
				this.OntotalCalsChanging(value);
				this.SendPropertyChanging();
				this._totalCals = value;
				this.SendPropertyChanged("totalCals");
				this.OntotalCalsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordStatus", DbType="Bit")]
	public System.Nullable<bool> ordStatus
	{
		get
		{
			return this._ordStatus;
		}
		set
		{
			if ((this._ordStatus != value))
			{
				this.OnordStatusChanging(value);
				this.SendPropertyChanging();
				this._ordStatus = value;
				this.SendPropertyChanged("ordStatus");
				this.OnordStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_ordAndLine", Storage="_ordAndLines", ThisKey="id", OtherKey="orderId")]
	public EntitySet<ordAndLine> ordAndLines
	{
		get
		{
			return this._ordAndLines;
		}
		set
		{
			this._ordAndLines.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_User_order", Storage="__User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
	public _User _User
	{
		get
		{
			return this.@__User.Entity;
		}
		set
		{
			_User previousValue = this.@__User.Entity;
			if (((previousValue != value) 
						|| (this.@__User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this.@__User.Entity = null;
					previousValue.orders.Remove(this);
				}
				this.@__User.Entity = value;
				if ((value != null))
				{
					value.orders.Add(this);
					this._userId = value.id;
				}
				else
				{
					this._userId = default(Nullable<int>);
				}
				this.SendPropertyChanged("_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ordAndLines(ordAndLine entity)
	{
		this.SendPropertyChanging();
		entity.order = this;
	}
	
	private void detach_ordAndLines(ordAndLine entity)
	{
		this.SendPropertyChanging();
		entity.order = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ContactId;
	
	private string _Comment;
	
	private System.Nullable<System.DateTime> _ContactDate;
	
	private System.Nullable<int> _userId;
	
	private string @__subject;
	
	private EntityRef<_User> @__User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIdChanging(int value);
    partial void OnContactIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnContactDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContactDateChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    partial void On_subjectChanging(string value);
    partial void On_subjectChanged();
    #endregion
	
	public Contact()
	{
		this.@__User = default(EntityRef<_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ContactId
	{
		get
		{
			return this._ContactId;
		}
		set
		{
			if ((this._ContactId != value))
			{
				this.OnContactIdChanging(value);
				this.SendPropertyChanging();
				this._ContactId = value;
				this.SendPropertyChanged("ContactId");
				this.OnContactIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ContactDate
	{
		get
		{
			return this._ContactDate;
		}
		set
		{
			if ((this._ContactDate != value))
			{
				this.OnContactDateChanging(value);
				this.SendPropertyChanging();
				this._ContactDate = value;
				this.SendPropertyChanged("ContactDate");
				this.OnContactDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
	public System.Nullable<int> userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				if (this.@__User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_subject]", Storage="__subject", DbType="VarChar(50)")]
	public string _subject
	{
		get
		{
			return this.@__subject;
		}
		set
		{
			if ((this.@__subject != value))
			{
				this.On_subjectChanging(value);
				this.SendPropertyChanging();
				this.@__subject = value;
				this.SendPropertyChanged("_subject");
				this.On_subjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_User_Contact", Storage="__User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
	public _User _User
	{
		get
		{
			return this.@__User.Entity;
		}
		set
		{
			_User previousValue = this.@__User.Entity;
			if (((previousValue != value) 
						|| (this.@__User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this.@__User.Entity = null;
					previousValue.Contacts.Remove(this);
				}
				this.@__User.Entity = value;
				if ((value != null))
				{
					value.Contacts.Add(this);
					this._userId = value.id;
				}
				else
				{
					this._userId = default(Nullable<int>);
				}
				this.SendPropertyChanged("_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderLine")]
public partial class orderLine : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _prodId;
	
	private System.Nullable<int> _quantity;
	
	private EntitySet<ordAndLine> _ordAndLines;
	
	private EntityRef<product> _product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnprodIdChanging(System.Nullable<int> value);
    partial void OnprodIdChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
	
	public orderLine()
	{
		this._ordAndLines = new EntitySet<ordAndLine>(new Action<ordAndLine>(this.attach_ordAndLines), new Action<ordAndLine>(this.detach_ordAndLines));
		this._product = default(EntityRef<product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodId", DbType="Int")]
	public System.Nullable<int> prodId
	{
		get
		{
			return this._prodId;
		}
		set
		{
			if ((this._prodId != value))
			{
				if (this._product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnprodIdChanging(value);
				this.SendPropertyChanging();
				this._prodId = value;
				this.SendPropertyChanged("prodId");
				this.OnprodIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
	public System.Nullable<int> quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="orderLine_ordAndLine", Storage="_ordAndLines", ThisKey="id", OtherKey="orderLineId")]
	public EntitySet<ordAndLine> ordAndLines
	{
		get
		{
			return this._ordAndLines;
		}
		set
		{
			this._ordAndLines.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_orderLine", Storage="_product", ThisKey="prodId", OtherKey="id", IsForeignKey=true)]
	public product product
	{
		get
		{
			return this._product.Entity;
		}
		set
		{
			product previousValue = this._product.Entity;
			if (((previousValue != value) 
						|| (this._product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._product.Entity = null;
					previousValue.orderLines.Remove(this);
				}
				this._product.Entity = value;
				if ((value != null))
				{
					value.orderLines.Add(this);
					this._prodId = value.id;
				}
				else
				{
					this._prodId = default(Nullable<int>);
				}
				this.SendPropertyChanged("product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ordAndLines(ordAndLine entity)
	{
		this.SendPropertyChanging();
		entity.orderLine = this;
	}
	
	private void detach_ordAndLines(ordAndLine entity)
	{
		this.SendPropertyChanging();
		entity.orderLine = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _content;
	
	private System.Nullable<decimal> _protein;
	
	private System.Nullable<decimal> _carbs;
	
	private System.Nullable<decimal> _fat;
	
	private System.Nullable<int> _resId;
	
	private string _name;
	
	private System.Nullable<decimal> _price;
	
	private System.Nullable<int> _ordered;
	
	private System.Nullable<decimal> _totalCalories;
	
	private System.Data.Linq.Binary _photo;
	
	private string _fGroup;
	
	private System.Nullable<int> _stock;
	
	private EntitySet<orderLine> _orderLines;
	
	private EntityRef<restaurant> _restaurant;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnproteinChanging(System.Nullable<decimal> value);
    partial void OnproteinChanged();
    partial void OncarbsChanging(System.Nullable<decimal> value);
    partial void OncarbsChanged();
    partial void OnfatChanging(System.Nullable<decimal> value);
    partial void OnfatChanged();
    partial void OnresIdChanging(System.Nullable<int> value);
    partial void OnresIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnorderedChanging(System.Nullable<int> value);
    partial void OnorderedChanged();
    partial void OntotalCaloriesChanging(System.Nullable<decimal> value);
    partial void OntotalCaloriesChanged();
    partial void OnphotoChanging(System.Data.Linq.Binary value);
    partial void OnphotoChanged();
    partial void OnfGroupChanging(string value);
    partial void OnfGroupChanged();
    partial void OnstockChanging(System.Nullable<int> value);
    partial void OnstockChanged();
    #endregion
	
	public product()
	{
		this._orderLines = new EntitySet<orderLine>(new Action<orderLine>(this.attach_orderLines), new Action<orderLine>(this.detach_orderLines));
		this._restaurant = default(EntityRef<restaurant>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="VarChar(MAX)")]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protein", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> protein
	{
		get
		{
			return this._protein;
		}
		set
		{
			if ((this._protein != value))
			{
				this.OnproteinChanging(value);
				this.SendPropertyChanging();
				this._protein = value;
				this.SendPropertyChanged("protein");
				this.OnproteinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carbs", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> carbs
	{
		get
		{
			return this._carbs;
		}
		set
		{
			if ((this._carbs != value))
			{
				this.OncarbsChanging(value);
				this.SendPropertyChanging();
				this._carbs = value;
				this.SendPropertyChanged("carbs");
				this.OncarbsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fat", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> fat
	{
		get
		{
			return this._fat;
		}
		set
		{
			if ((this._fat != value))
			{
				this.OnfatChanging(value);
				this.SendPropertyChanging();
				this._fat = value;
				this.SendPropertyChanged("fat");
				this.OnfatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resId", DbType="Int")]
	public System.Nullable<int> resId
	{
		get
		{
			return this._resId;
		}
		set
		{
			if ((this._resId != value))
			{
				if (this._restaurant.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnresIdChanging(value);
				this.SendPropertyChanging();
				this._resId = value;
				this.SendPropertyChanged("resId");
				this.OnresIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordered", DbType="Int")]
	public System.Nullable<int> ordered
	{
		get
		{
			return this._ordered;
		}
		set
		{
			if ((this._ordered != value))
			{
				this.OnorderedChanging(value);
				this.SendPropertyChanging();
				this._ordered = value;
				this.SendPropertyChanged("ordered");
				this.OnorderedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalCalories", AutoSync=AutoSync.Always, DbType="Decimal(14,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<decimal> totalCalories
	{
		get
		{
			return this._totalCalories;
		}
		set
		{
			if ((this._totalCalories != value))
			{
				this.OntotalCaloriesChanging(value);
				this.SendPropertyChanging();
				this._totalCalories = value;
				this.SendPropertyChanged("totalCalories");
				this.OntotalCaloriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary photo
	{
		get
		{
			return this._photo;
		}
		set
		{
			if ((this._photo != value))
			{
				this.OnphotoChanging(value);
				this.SendPropertyChanging();
				this._photo = value;
				this.SendPropertyChanged("photo");
				this.OnphotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fGroup", DbType="VarChar(50)")]
	public string fGroup
	{
		get
		{
			return this._fGroup;
		}
		set
		{
			if ((this._fGroup != value))
			{
				this.OnfGroupChanging(value);
				this.SendPropertyChanging();
				this._fGroup = value;
				this.SendPropertyChanged("fGroup");
				this.OnfGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int")]
	public System.Nullable<int> stock
	{
		get
		{
			return this._stock;
		}
		set
		{
			if ((this._stock != value))
			{
				this.OnstockChanging(value);
				this.SendPropertyChanging();
				this._stock = value;
				this.SendPropertyChanged("stock");
				this.OnstockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_orderLine", Storage="_orderLines", ThisKey="id", OtherKey="prodId")]
	public EntitySet<orderLine> orderLines
	{
		get
		{
			return this._orderLines;
		}
		set
		{
			this._orderLines.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="restaurant_product", Storage="_restaurant", ThisKey="resId", OtherKey="id", IsForeignKey=true)]
	public restaurant restaurant
	{
		get
		{
			return this._restaurant.Entity;
		}
		set
		{
			restaurant previousValue = this._restaurant.Entity;
			if (((previousValue != value) 
						|| (this._restaurant.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._restaurant.Entity = null;
					previousValue.products.Remove(this);
				}
				this._restaurant.Entity = value;
				if ((value != null))
				{
					value.products.Add(this);
					this._resId = value.id;
				}
				else
				{
					this._resId = default(Nullable<int>);
				}
				this.SendPropertyChanged("restaurant");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orderLines(orderLine entity)
	{
		this.SendPropertyChanging();
		entity.product = this;
	}
	
	private void detach_orderLines(orderLine entity)
	{
		this.SendPropertyChanging();
		entity.product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_User]")]
public partial class _User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _userName;
	
	private string _FirstName;
	
	private string _password;
	
	private string _email;
	
	private string _LastName;
	
	private string @__Address;
	
	private string _sex;
	
	private System.Nullable<bool> _acc_Status;
	
	private EntitySet<order> _orders;
	
	private EntitySet<Contact> _Contacts;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void On_AddressChanging(string value);
    partial void On_AddressChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void Onacc_StatusChanging(System.Nullable<bool> value);
    partial void Onacc_StatusChanged();
    #endregion
	
	public _User()
	{
		this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
		this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string userName
	{
		get
		{
			return this._userName;
		}
		set
		{
			if ((this._userName != value))
			{
				this.OnuserNameChanging(value);
				this.SendPropertyChanging();
				this._userName = value;
				this.SendPropertyChanged("userName");
				this.OnuserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Address]", Storage="__Address", DbType="VarChar(MAX)")]
	public string _Address
	{
		get
		{
			return this.@__Address;
		}
		set
		{
			if ((this.@__Address != value))
			{
				this.On_AddressChanging(value);
				this.SendPropertyChanging();
				this.@__Address = value;
				this.SendPropertyChanged("_Address");
				this.On_AddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(50)")]
	public string sex
	{
		get
		{
			return this._sex;
		}
		set
		{
			if ((this._sex != value))
			{
				this.OnsexChanging(value);
				this.SendPropertyChanging();
				this._sex = value;
				this.SendPropertyChanged("sex");
				this.OnsexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acc_Status", DbType="Bit")]
	public System.Nullable<bool> acc_Status
	{
		get
		{
			return this._acc_Status;
		}
		set
		{
			if ((this._acc_Status != value))
			{
				this.Onacc_StatusChanging(value);
				this.SendPropertyChanging();
				this._acc_Status = value;
				this.SendPropertyChanged("acc_Status");
				this.Onacc_StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_User_order", Storage="_orders", ThisKey="id", OtherKey="userId")]
	public EntitySet<order> orders
	{
		get
		{
			return this._orders;
		}
		set
		{
			this._orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_User_Contact", Storage="_Contacts", ThisKey="id", OtherKey="userId")]
	public EntitySet<Contact> Contacts
	{
		get
		{
			return this._Contacts;
		}
		set
		{
			this._Contacts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orders(order entity)
	{
		this.SendPropertyChanging();
		entity._User = this;
	}
	
	private void detach_orders(order entity)
	{
		this.SendPropertyChanging();
		entity._User = null;
	}
	
	private void attach_Contacts(Contact entity)
	{
		this.SendPropertyChanging();
		entity._User = this;
	}
	
	private void detach_Contacts(Contact entity)
	{
		this.SendPropertyChanging();
		entity._User = null;
	}
}
#pragma warning restore 1591
